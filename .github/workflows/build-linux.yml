name: Build on Linux

on:
    workflow_call:
        inputs:
            commit-sha:
                type: string
                required: true
        outputs:
            runid:
                value: ${{github.run_id}}
    workflow_dispatch:
        inputs:
            commit-sha:
                type: string
                description: Target commit
                required: true

jobs:
    x64:
        runs-on: ubuntu-latest
        steps:

          - name: Checkout wasmtime
            uses: actions/checkout@v4
            with:
                repository: bytecodealliance/wasmtime
                path: wasmtime
                ref: ${{inputs.commit-sha}}
                submodules: recursive

          - name: Install Rust
            uses: dtolnay/rust-toolchain@v1
            with:
                toolchain: stable
                targets: x86_64-unknown-linux-gnu

          - name: Build Linux x64 Debug
            shell: bash
            run: |
                cd wasmtime/crates/c-api
                export RUSTFLAGS="-Cdebuginfo=2"
                cmake -S . -B build -DWASMTIME_ALWAYS_BUILD=ON -DBUILD_SHARED_LIBS=OFF -DWASMTIME_TARGET=x86_64-unknown-linux-gnu -DCMAKE_INSTALL_PREFIX="$PWD/debug" -DCMAKE_BUILD_TYPE=Debug
                cmake --build build --config Debug --parallel
                cmake --install build --config Debug

          - name: Build Linux x64 Release
            shell: bash
            run: |
                cd wasmtime/crates/c-api
                cmake -S . -B build -DWASMTIME_ALWAYS_BUILD=ON -DBUILD_SHARED_LIBS=OFF -DWASMTIME_TARGET=x86_64-unknown-linux-gnu -DCMAKE_INSTALL_PREFIX="$PWD/release" -DCMAKE_BUILD_TYPE=Release
                cmake --build build --config Release --parallel
                cmake --install build --config Release

          - name: Compress Product
            shell: bash
            run: |
                echo ${{inputs.commit-sha}} >> VERSION.txt
                7z a wasmtime_linux_x64_debug.7z .\wasmtime\crates\c-api\debug\lib\libwasmtime.a .\wasmtime\crates\c-api\debug\include VERSION.txt
                7z a wasmtime_linux_x64_release.7z .\wasmtime\crates\c-api\release\lib\libwasmtime.a .\wasmtime\crates\c-api\release\include VERSION.txt

          - name: Upload Archive
            uses: actions/upload-artifact@v4
            with:
                name: wasmtime_linux_x64
                path: |
                    *.7z
                retention-days: 7

    arm64:
        runs-on: ubuntu-24.04-arm
        steps:

          - name: Checkout wasmtime
            uses: actions/checkout@v4
            with:
                repository: bytecodealliance/wasmtime
                path: wasmtime
                ref: ${{inputs.commit-sha}}
                submodules: recursive

          - name: Install Rust
            uses: dtolnay/rust-toolchain@v1
            with:
                toolchain: stable
                targets: aarch64-unknown-linux-gnu

          - name: Build Linux arm64 Debug
            shell: bash
            run: |
                cd wasmtime/crates/c-api
                export RUSTFLAGS="-Cdebuginfo=2"
                cmake -S . -B build -DWASMTIME_ALWAYS_BUILD=ON -DBUILD_SHARED_LIBS=OFF -DWASMTIME_TARGET=aarch64-unknown-linux-gnu -DCMAKE_INSTALL_PREFIX="$PWD/debug" -DCMAKE_BUILD_TYPE=Debug
                cmake --build build --config Debug --parallel
                cmake --install build --config Debug

          - name: Build Linux arm64 Release
            shell: bash
            run: |
                cd wasmtime/crates/c-api
                cmake -S . -B build -DWASMTIME_ALWAYS_BUILD=ON -DBUILD_SHARED_LIBS=OFF -DWASMTIME_TARGET=aarch64-unknown-linux-gnu -DCMAKE_INSTALL_PREFIX="$PWD/release" -DCMAKE_BUILD_TYPE=Release
                cmake --build build --config Release --parallel
                cmake --install build --config Release

          - name: Compress Product
            shell: bash
            run: |
                echo ${{inputs.commit-sha}} >> VERSION.txt
                7z a wasmtime_linux_arm64_debug.7z .\wasmtime\crates\c-api\debug\lib\libwasmtime.a .\wasmtime\crates\c-api\debug\include VERSION.txt
                7z a wasmtime_linux_arm64_release.7z .\wasmtime\crates\c-api\release\lib\libwasmtime.a .\wasmtime\crates\c-api\release\include VERSION.txt

          - name: Upload Archive
            uses: actions/upload-artifact@v4
            with:
                name: wasmtime_linux_arm64
                path: |
                    *.7z
                retention-days: 7